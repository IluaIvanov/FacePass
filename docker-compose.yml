version: '3.7'
services:
  &app-service app: &app-service-template
    build:
      args:
        user: admin
        uid: 1000
      context: ./docker/app/
      dockerfile: Dockerfile
    image: facepass
    container_name: facepass-app
    user: root
    hostname: *app-service
    restart: always
    working_dir: /var/www/facepass
    volumes:
      - ./src:/var/www/facepass:rw
      - ./docker/app/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./docker/app/etc/php/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf
    depends_on:
      - pgsql
    networks:
      - app-network

  &pgsqlname pgsql:
    image: postgres:13.7-alpine
    container_name: &pgsqlhost facepass-pgsql
    restart: always
    hostname: *pgsqlname
    environment: 
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: dev
      POSTGRES_USER: dev
    volumes:
      - pg-data-facepass:/var/lib/postgresql/data:rw
    networks:
      - app-network

  &phppgadmin phppgadmin:
    image: bitnami/phppgadmin:latest
    container_name: facepass-phppgadmin
    restart: always
    hostname: *pgsqlname
    ports:
      - 0.0.0.0:5454:8080
    environment: 
      DATABASE_ENABLE_EXTRA_LOGIN_SECURITY: 1
      DATABASE_HOST: *pgsqlhost
    volumes:
      - ./docker/pgsql/phppgadmin_data:/bitnami
    networks:
      - app-network

  &nginxname nginx:
    image: nginx:1.17-alpine
    container_name: facepass-nginx
    restart: always
    hostname: *nginxname
    ports:
      - 0.0.0.0:8080:80
    volumes:
      - ./src:/var/www/facepass
      - ./docker/nginx:/etc/nginx/conf.d
      - ./logNginx:/var/log/nginx/
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  
volumes:
  pg-data-facepass:
    driver: local
  